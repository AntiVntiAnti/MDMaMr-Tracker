# Form implementation generated from reading ui file 'MMDMr.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(338, 385)
        MainWindow.setStyleSheet("QWidget {\n"
"    font: 12pt \".AppleSystemUIFont\";\n"
"    background-color: rgb(12, 12, 12);\n"
"    color: #fff;\n"
"}\n"
"\n"
"QSpinBox {\n"
"background:transparent;\n"
"border:none;\n"
"font-size:14pt;\n"
"font-weight:bold;\n"
"}\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QSlider\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider:horizontal {\n"
"background:transparent;\n"
"}\n"
"\n"
"QSlider::groove:horizontal {\n"
"border-radius: 5px;\n"
"height: 10px;\n"
"margin: 0px;\n"
"background:rgb(22, 24, 29);\n"
"}\n"
"\n"
"QSlider::groove:horizontal:hover {\n"
"background: rgba(233,123,111,0.25);\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"background: rgb(233,123,111);\n"
"height: 10px;\n"
"width: 10px;\n"
"margin: 0px;\n"
"border-radius:5px;\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal {\n"
"background:rgb(233,123,111);\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"background-color: rgb(255,163,151);\n"
"}\n"
"\n"
"QSlider::handle:horizontal:pressed {\n"
"background-color:rgb(188,78,66);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QSlider\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QSlider {min-width:60px; max-width:60px; padding:4px;}\n"
"QSlider::groove:vertical {\n"
"border-radius: 5px;\n"
"width: 60px;\n"
"margin: 0px;\n"
"background:rgb(22, 24, 29);\n"
"}\n"
"\n"
"QSlider::groove:vertical:hover {\n"
"background: rgba(233,123,111,0.25);\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"background: rgb(233,123,111);\n"
"height: 30px;\n"
"width: 40px;\n"
"margin: 0px;\n"
"border-radius:5px;\n"
"}\n"
"\n"
"QSlider::add-page:vertical {\n"
"background:transparent;\n"
"}\n"
"\n"
"QSlider::handle:vertical:hover {\n"
"background-color: rgb(255,163,151);\n"
"}\n"
"\n"
"QSlider::handle:vertical:pressed {\n"
"background-color:rgb(188,78,66);\n"
"}\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////////////////////////////\n"
"                                    QScrollBar\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"QScrollBar:horizontal {border: none;background:transparent;height: 12px;margin: 0px 10px 0px 10px;border-radius: 3px;}\n"
"QScrollBar::handle:horizontal {background: rgb(35,35,37);min-width:24px;border-radius: 4px}\n"
"QScrollBar::add-line:horizontal {border: none;background: transparent;width: 20px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;subcontrol-position: right;subcontrol-origin: margin;}\n"
"QScrollBar::sub-line:horizontal {border: none;background: transparent;width: 20px;border-top-left-radius: 4px;border-bottom-left-radius: 4px;subcontrol-position: left;subcontrol-origin: margin;}\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {background: none;}\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {background: transparent;}\n"
"QScrollBar:vertical {border: none;background-color:transparent;width: 12px;margin: 10px 0px 10px 0px;border-radius: 4px;}\n"
"QScrollBar::handle:vertical {background: rgb(35,35,37);min-height: 12px;border-radius: 4px}\n"
"QScrollBar::add-line:vertical {border: none;background: transparent;height: 20px;border-bottom-left-radius: 4px;border-bottom-right-radius: 4px;subcontrol-position: bottom;subcontrol-origin: margin;}\n"
"QScrollBar::sub-line:vertical {border: none;background: transparent;height: 20px;border-top-left-radius: 4px;border-top-right-radius: 4px;subcontrol-position: top;subcontrol-origin: margin;}\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {background: none;}\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {background: transparent;}\n"
"\n"
"\n"
"\n"
"    ")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.mainStack = QtWidgets.QStackedWidget(parent=self.centralwidget)
        self.mainStack.setObjectName("mainStack")
        self.mmdm_page = QtWidgets.QWidget()
        self.mmdm_page.setObjectName("mmdm_page")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.mmdm_page)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.mmdmContainer = QtWidgets.QFrame(parent=self.mmdm_page)
        self.mmdmContainer.setObjectName("mmdmContainer")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.mmdmContainer)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setHorizontalSpacing(6)
        self.gridLayout_4.setVerticalSpacing(0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.mood = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mood.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(242,89,85);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(242,89,85);\n"
"    }\n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(242,89,85);}\n"
"    QSpinBox:hover {color: rgb(255,149,145);}\n"
"    QSpinBox:focus {color: rgb(255,119,115);}\n"
"    ")
        self.mood.setFrame(False)
        self.mood.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mood.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mood.setMaximum(10)
        self.mood.setObjectName("mood")
        self.gridLayout_4.addWidget(self.mood, 0, 0, 1, 1)
        self.mania = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mania.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(239,194,100);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(239,194,100);\n"
"    }\n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(239,194,100);}\n"
"    QSpinBox:hover {color: rgb(255,254,160);}\n"
"    QSpinBox:focus {color: rgb(255,224,130);}\n"
"    ")
        self.mania.setFrame(False)
        self.mania.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mania.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mania.setMaximum(10)
        self.mania.setObjectName("mania")
        self.gridLayout_4.addWidget(self.mania, 0, 1, 1, 1)
        self.depression = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.depression.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(103,154,201);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(103,154,201);\n"
"    }\n"
"    \n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(103,154,201);}\n"
"    QSpinBox:hover {color: rgb(163,214,255);}\n"
"    QSpinBox:focus {color: rgb(133,184,231);}\n"
"    ")
        self.depression.setFrame(False)
        self.depression.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.depression.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.depression.setMaximum(10)
        self.depression.setObjectName("depression")
        self.gridLayout_4.addWidget(self.depression, 0, 2, 1, 1)
        self.mixed_risk = QtWidgets.QSpinBox(parent=self.mmdmContainer)
        self.mixed_risk.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(240,129,92);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(240,129,92);\n"
"    }\n"
"    \n"
"    \n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSpinBox\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QSpinBox {color:rgb(240,129,92);}\n"
"    QSpinBox:hover {color: rgb(255,189,152);}\n"
"    QSpinBox:focus {color: rgb(255,159,122);}\n"
"    ")
        self.mixed_risk.setFrame(False)
        self.mixed_risk.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mixed_risk.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.mixed_risk.setMaximum(10)
        self.mixed_risk.setObjectName("mixed_risk")
        self.gridLayout_4.addWidget(self.mixed_risk, 0, 3, 1, 1)
        self.mixed_risk_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mixed_risk_slider.sizePolicy().hasHeightForWidth())
        self.mixed_risk_slider.setSizePolicy(sizePolicy)
        self.mixed_risk_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(240,129,92);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(240,129,92);\n"
"    }\n"
"    \n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(243,131,93);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,171,133);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(193,81,43);}\n"
"QSlider::groove:vertical:hover {background:rgba(243,131,93,0.25);}\n"
"QSlider::groove:vertical {background:rgba(243,131,93,0.15);}\n"
"")
        self.mixed_risk_slider.setMaximum(10)
        self.mixed_risk_slider.setInvertedAppearance(False)
        self.mixed_risk_slider.setInvertedControls(False)
        self.mixed_risk_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mixed_risk_slider.setObjectName("mixed_risk_slider")
        self.gridLayout_4.addWidget(self.mixed_risk_slider, 1, 3, 2, 1)
        self.depression_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.depression_slider.sizePolicy().hasHeightForWidth())
        self.depression_slider.setSizePolicy(sizePolicy)
        self.depression_slider.setStyleSheet("\n"
"\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(103,154,201);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(103,154,201);\n"
"    }\n"
"    \n"
"    \n"
"\n"
"\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {\n"
"background:rgb(102,155,201);}\n"
"QSlider::handle:vertical:hover {background:rgb(142,195,241);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(52,105,151);}\n"
"QSlider::groove:vertical:hover {background:rgba(102,155,201,0.25);}\n"
"QSlider::groove:vertical {background:rgba(102,155,201,0.15);}\n"
"")
        self.depression_slider.setMaximum(10)
        self.depression_slider.setInvertedAppearance(False)
        self.depression_slider.setInvertedControls(False)
        self.depression_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.depression_slider.setObjectName("depression_slider")
        self.gridLayout_4.addWidget(self.depression_slider, 1, 2, 2, 1)
        self.mania_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mania_slider.sizePolicy().hasHeightForWidth())
        self.mania_slider.setSizePolicy(sizePolicy)
        self.mania_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(239,194,100);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(239,194,100);\n"
"    }\n"
"    \n"
"\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical {background:rgb(239,193,100);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,233,140);}\n"
"QSlider::handle:vertical:pressed {\n"
"background:rgb(189,143,50);}\n"
"QSlider::groove:vertical:hover {background:rgba(239,193,100,0.25);}\n"
"QSlider::groove:vertical {background:rgba(239,193,100,0.15);}\n"
"\n"
"        ")
        self.mania_slider.setMaximum(10)
        self.mania_slider.setInvertedAppearance(False)
        self.mania_slider.setInvertedControls(False)
        self.mania_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mania_slider.setObjectName("mania_slider")
        self.gridLayout_4.addWidget(self.mania_slider, 1, 1, 2, 1)
        self.mood_slider = QtWidgets.QSlider(parent=self.mmdmContainer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mood_slider.sizePolicy().hasHeightForWidth())
        self.mood_slider.setSizePolicy(sizePolicy)
        self.mood_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QToolTip\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    QToolTip {\n"
"        background: rgba(23,23,23, 150);\n"
"        border: 1px solid rgb(242,89,85);\n"
"        border-radius: 5px;\n"
"        padding:4px;\n"
"        text-align: left;\n"
"        color: rgb(242,89,85);\n"
"    }\n"
"\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSlider Colors\n"
"/////////////////////////////////////////////////////////////// */\n"
"\n"
"QSlider::handle:vertical { background:rgb(243,89,85);}\n"
"QSlider::handle:vertical:hover {background:rgb(255,129,125);}\n"
"QSlider::handle:vertical:pressed {background:rgb(193,39,35);}\n"
"QSlider::groove:vertical:hover {background:rgba(243,89,85,0.25);}\n"
"QSlider::groove:vertical {background:rgba(243,89,85,0.15);}\n"
"\n"
"        ")
        self.mood_slider.setMaximum(10)
        self.mood_slider.setInvertedAppearance(False)
        self.mood_slider.setInvertedControls(False)
        self.mood_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.mood_slider.setObjectName("mood_slider")
        self.gridLayout_4.addWidget(self.mood_slider, 1, 0, 2, 1)
        self.gridLayout_2.addWidget(self.mmdmContainer, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 0, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_2.addItem(spacerItem1, 0, 2, 1, 1)
        self.mainStack.addWidget(self.mmdm_page)
        self.mmdm_data_page = QtWidgets.QWidget()
        self.mmdm_data_page.setObjectName("mmdm_data_page")
        self.gridLayout = QtWidgets.QGridLayout(self.mmdm_data_page)
        self.gridLayout.setObjectName("gridLayout")
        self.mental_mental_table = QtWidgets.QTableView(parent=self.mmdm_data_page)
        self.mental_mental_table.setStyleSheet("\n"
" QTableView {\n"
"     background-color: transparent;\n"
"     selection-background-color: #7e57c2;\n"
"     gridline-color:transparent;\n"
"     color:rgb(31,111,42);\n"
" }\n"
" QTableView::item {\n"
"     padding: 1px;\n"
"     background:rgb(96,176,107);\n"
" }\n"
" QTableView::item:selected {\n"
"     color: #fff;\n"
"     background:rgb(23, 23, 23);\n"
" }\n"
" ")
        self.mental_mental_table.setShowGrid(False)
        self.mental_mental_table.setSortingEnabled(True)
        self.mental_mental_table.setObjectName("mental_mental_table")
        self.mental_mental_table.horizontalHeader().setStretchLastSection(True)
        self.mental_mental_table.verticalHeader().setVisible(False)
        self.gridLayout.addWidget(self.mental_mental_table, 0, 0, 1, 1)
        self.mainStack.addWidget(self.mmdm_data_page)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.page)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.mental_mental_date = QtWidgets.QDateEdit(parent=self.page)
        self.mental_mental_date.setObjectName("mental_mental_date")
        self.gridLayout_5.addWidget(self.mental_mental_date, 0, 0, 1, 1)
        self.mental_mental_time = QtWidgets.QTimeEdit(parent=self.page)
        self.mental_mental_time.setObjectName("mental_mental_time")
        self.gridLayout_5.addWidget(self.mental_mental_time, 1, 0, 1, 1)
        self.mainStack.addWidget(self.page)
        self.gridLayout_3.addWidget(self.mainStack, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 338, 20))
        self.menubar.setObjectName("menubar")
        self.menuMMDMr = QtWidgets.QMenu(parent=self.menubar)
        self.menuMMDMr.setObjectName("menuMMDMr")
        self.menuDATA = QtWidgets.QMenu(parent=self.menubar)
        self.menuDATA.setObjectName("menuDATA")
        MainWindow.setMenuBar(self.menubar)
        self.actionMMDMInputView = QtGui.QAction(parent=MainWindow)
        self.actionMMDMInputView.setObjectName("actionMMDMInputView")
        self.actionMMDMTableView = QtGui.QAction(parent=MainWindow)
        self.actionMMDMTableView.setObjectName("actionMMDMTableView")
        self.actionExit = QtGui.QAction(parent=MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionCommit = QtGui.QAction(parent=MainWindow)
        self.actionCommit.setObjectName("actionCommit")
        self.actionDelete = QtGui.QAction(parent=MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.menuMMDMr.addAction(self.actionMMDMInputView)
        self.menuMMDMr.addAction(self.actionMMDMTableView)
        self.menuMMDMr.addAction(self.actionExit)
        self.menuDATA.addAction(self.actionCommit)
        self.menuDATA.addAction(self.actionDelete)
        self.menubar.addAction(self.menuMMDMr.menuAction())
        self.menubar.addAction(self.menuDATA.menuAction())

        self.retranslateUi(MainWindow)
        self.mainStack.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.mood.setToolTip(_translate("MainWindow", "<html><head/><body><p>MOOD</p></body></html>"))
        self.mania.setToolTip(_translate("MainWindow", "<html><head/><body><p>MANIA</p></body></html>"))
        self.depression.setToolTip(_translate("MainWindow", "<html><head/><body><p>DEPRESSION</p></body></html>"))
        self.mixed_risk.setToolTip(_translate("MainWindow", "<html><head/><body><p>MIXED RISK</p></body></html>"))
        self.mixed_risk_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MIXED RISK</p></body></html>"))
        self.depression_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>DEPRESSION</p></body></html>"))
        self.mania_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MANIA</p></body></html>"))
        self.mood_slider.setToolTip(_translate("MainWindow", "<html><head/><body><p>MOOD</p></body></html>"))
        self.menuMMDMr.setTitle(_translate("MainWindow", "MMDMr"))
        self.menuDATA.setTitle(_translate("MainWindow", "DATA"))
        self.actionMMDMInputView.setText(_translate("MainWindow", "Show Input Page"))
        self.actionMMDMInputView.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionMMDMTableView.setText(_translate("MainWindow", "Show TableView"))
        self.actionMMDMTableView.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionCommit.setText(_translate("MainWindow", "Commit"))
        self.actionCommit.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.actionDelete.setText(_translate("MainWindow", "Delete Record(s)"))
        self.actionDelete.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
